# ApplicationSet able to read k=v from secret
# - Install the helm chart
# - Create the secret
# - Deploy the ApplicationSet
#
# helm repo add appset-secret-plugin https://small-hack.github.io/appset-secret-plugin
# kubectl delete secret argocd-secret-vars -n argocd
# kubectl create secret generic argocd-secret-vars -n argocd --from-file=secret_vars.yaml=manifests/secret_vars.yaml
# helm install argocd-secret-plugin appset-secret-plugin/appset-secret-plugin -n argocd \
#  --set secretVars.existingSecret=argocd-secret-vars
# kubectl apply -f manifests/applicationset-secret.yaml
#
# kubectl delete -f manifests/applicationset-secret.yaml
# helm uninstall argocd-secret-plugin -n argocd
#
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: dummy
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - plugin:
        configMapRef:
          name: secret-var-plugin-generator
        input:
          parameters:
            secret_vars:
            - "app_name"
            - "quay_org"
  template:
    metadata:
      name: 'dummy-{{ .app_name }}'
    spec:
      destination:
        server: "https://kubernetes.default.svc"
      sources:
        - repoURL: cnoe://manifests
          targetRevision: HEAD
          path: "."
          kustomize:
            patches:
              - target:
                  kind: Job
                  name: dummy
                patch: |-
                  - op: add
                    path: /spec/template/spec/containers/0/env/-
                    value:
                      name: QUAY_ORG
                      value: '{{ .quay_org }}'
      project: default
      syncPolicy:
        automated:
          selfHeal: true
          syncOptions:
            - CreateNamespace=true